MainActivity.java

package com.example.notifyme;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NotificationCompat;
import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.os.Build;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;

public class MainActivity extends AppCompatActivity {
    private static final int NOTIFICATION_ID = 0;
    private static final String ACTION_UPDATE_NOTIFICATION = "com.android.example.notifyme.ACTION_UPDATE_NOTIFICATION";
    private static final String PRIMARY_CHANNEL_ID = "primary_notification_channel";
    private Button button_notify;
    private Button button_cancel;
    private Button button_update;
    private NotificationManager mManager;
    private NotificationReceiver mReceiver = new NotificationReceiver();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        button_notify=findViewById(R.id.notify);
        button_notify.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                sendNotify();
            }
        });
        button_update=findViewById(R.id.update);
        button_update.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                updateNotify();
            }
        });
        button_cancel=findViewById(R.id.cancel);
        button_cancel.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                cancelNotify();
            }
        });

        mManager=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);
        createNotificationChannel();
        registerReceiver(mReceiver, new IntentFilter(ACTION_UPDATE_NOTIFICATION));
        setNotifyEnabled(true, false, false);
    }

    @Override
    protected void onDestroy() {
        unregisterReceiver(mReceiver);
        super.onDestroy();
    }

    void setNotifyEnabled(Boolean isNotify,Boolean isUpdate,Boolean isCancel){
        button_notify.setEnabled(isNotify);
        button_update.setEnabled(isUpdate);
        button_cancel.setEnabled(isCancel);
    }

    private void createNotificationChannel() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            NotificationChannel Notificationchannel = new NotificationChannel(PRIMARY_CHANNEL_ID,
                    getString(R.string.notification_channel_name),
                    NotificationManager.IMPORTANCE_HIGH);
            NotificationManager notificationManager = getSystemService(NotificationManager.class);
            notificationManager.createNotificationChannel(Notificationchannel);
            Notificationchannel.enableLights(true);
            Notificationchannel.setLightColor(Color.RED);
            Notificationchannel.enableVibration(true);
            Notificationchannel.setDescription(getString(R.string.notification_channel_description));
            mManager.createNotificationChannel(Notificationchannel);
        }else{
            Log.e("ban","版本过低");
        }
    }

    private NotificationCompat.Builder getNotificationBuilder(){
        Intent mIntent = new Intent(this, MainActivity.class);
        PendingIntent mPendingIntent = PendingIntent.getActivity(this, NOTIFICATION_ID, mIntent, PendingIntent.FLAG_UPDATE_CURRENT);
        NotificationCompat.Builder mBuilder= new NotificationCompat.Builder(this,PRIMARY_CHANNEL_ID);
        mBuilder.setContentTitle(getString(R.string.notification_title))
                .setContentText(getString(R.string.notification_text))
                .setSmallIcon(R.drawable.ic_android)
                .setAutoCancel(true).setContentIntent(mPendingIntent)
                .setPriority(Notification.PRIORITY_HIGH)
                .setDefaults(Notification.DEFAULT_ALL);
        return  mBuilder;
    }

    private void sendNotify(){
        Intent updateIntent = new Intent(ACTION_UPDATE_NOTIFICATION);
        PendingIntent updatePendingIntent = PendingIntent.getBroadcast(this, NOTIFICATION_ID,
                updateIntent, PendingIntent.FLAG_ONE_SHOT);
        NotificationCompat.Builder notifyBuilder = getNotificationBuilder();
        notifyBuilder.addAction(R.drawable.ic_update, getString(R.string.update),
                updatePendingIntent);
        mManager.notify(NOTIFICATION_ID, notifyBuilder.build());
        setNotifyEnabled(false, true, true);
    }
    private void updateNotify(){
        NotificationCompat.Builder mBuilder = getNotificationBuilder();
        NotificationCompat.InboxStyle inboxStyle = new NotificationCompat.InboxStyle();
        inboxStyle.setBigContentTitle("Title");
        inboxStyle.addLine("Here is the first one,it's long long long long long long long long long long long long line")
                  .addLine("This is the second one")
                  .addLine("Yay last one");
        mBuilder.setStyle(inboxStyle);
        mManager.notify(NOTIFICATION_ID, mBuilder.build());
        setNotifyEnabled(false, false, true);
    }
    private void cancelNotify(){
        mManager.cancel(NOTIFICATION_ID);
        setNotifyEnabled(true, false, false);
    }
    public class NotificationReceiver extends BroadcastReceiver {
        public NotificationReceiver() {}
        @Override
        public void onReceive(Context context, Intent intent) {
            updateNotify();
        }
    }
}




activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <Button
        android:id="@+id/notify"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:enabled="true"
        app:layout_constraintBottom_toTopOf="@+id/update"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        android:text="@string/notify_me"/>
    <Button
        android:id="@+id/update"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:enabled="false"
        app:layout_constraintBottom_toTopOf="@+id/cancel"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/notify"
        android:text="@string/update_me"/>
    <Button
        android:id="@+id/cancel"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:enabled="false"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/update"
        android:text="@string/cancel_me"/>

</androidx.constraintlayout.widget.ConstraintLayout>


string.xml

<resources>
    <string name="app_name">NotifyMe</string>
    <string name="notification_title">You\'ve been notified!</string>
    <string name="notification_text">This is your notification text.</string>
    <string name="update">Update Notification</string>
    <string name="notification_updated">Notification Updated!</string>
    <string name="notification_channel_name">Mascot Notification</string>
    <string name="notification_channel_description">Notification from Mascot</string>
    <string name="notify_me">NOTIFY ME!</string>
    <string name="update_me">UPDATE ME!</string>
    <string name="cancel_me">CANCEL ME!</string>
</resources>